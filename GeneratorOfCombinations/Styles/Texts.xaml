<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:local="clr-namespace:GeneratorOfCombinations" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">

	<Style TargetType="{x:Type TextBox}">

		<Setter Property="FontSize" Value="15" />
		<Setter Property="Padding" Value="10" />
		<Setter Property="Margin" Value="0 5 0 5" />
		<Setter Property="BorderBrush" Value="#3099c5" />
		<Setter Property="BorderThickness" Value="0 0 0 2" />

		<Setter Property="Background" Value="#ffffff" />
		<Setter Property="Foreground" Value="#000000" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBoxBase}">

					<Grid>

						<Border x:Name="border" 
								BorderBrush="{TemplateBinding BorderBrush}" 
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}"
								SnapsToDevicePixels="True"
								CornerRadius="10">
							<ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
						</Border>

						<TextBlock IsHitTestVisible="False"
								   Text="{TemplateBinding Tag}"
								   x:Name="placeholder"
								   Padding="{TemplateBinding Padding}"
								   VerticalAlignment="Center"
								   HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
								   Foreground="#000000">

							<TextBlock.Style>
								<Style TargetType="{x:Type TextBlock}">
									<Setter Property="Visibility" Value="Collapsed" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</TextBlock.Style>

						</TextBlock>

					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" TargetName="border" Value="0.56"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="True">
							<Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

	</Style>

	<Style TargetType="{x:Type xctk:RichTextBox}">
		<Style.Resources>
			<Style x:Key="{x:Type FlowDocument}" TargetType="{x:Type FlowDocument}">
				<Setter Property="OverridesDefaultStyle" Value="True"/>
			</Style>
			<Style x:Key="{x:Type Hyperlink}" TargetType="{x:Type Hyperlink}">
				<Style.BasedOn>
					<Style TargetType="{x:Type Hyperlink}">
						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}"/>
						<Setter Property="TextDecorations" Value="Underline"/>
						<Style.Triggers>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding (0)}" Value="false"/>
									<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Foreground" Value="Red"/>
							</MultiDataTrigger>
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding (0)}" Value="true"/>
									<Condition Binding="{Binding (0)}" Value="true"/>
									<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Foreground" Value="Red"/>
							</MultiDataTrigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="True">
								<Setter Property="Cursor" Value="Hand"/>
							</Trigger>
						</Style.Triggers>
					</Style>
				</Style.BasedOn>
				<Style.Triggers>
					<Trigger Property="IsMouseOver" Value="True">
						<Setter Property="Foreground" Value="Blue"/>
					</Trigger>
					<Trigger Property="IsEnabled" Value="False">
						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
					</Trigger>
				</Style.Triggers>
			</Style>
		</Style.Resources>
		<Setter Property="MinWidth" Value="10"/>
		<Setter Property="Text" Value="{x:Null}"/>
		<Style.BasedOn>
			<Style TargetType="{x:Type TextBoxBase}">
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
				<Setter Property="BorderBrush" Value="#FFABADB3"/>
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
				<Setter Property="BorderThickness" Value="3"/>
				<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
				<Setter Property="HorizontalContentAlignment" Value="Left"/>
				<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
				<Setter Property="AllowDrop" Value="True"/>
				<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
				<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TextBoxBase}">

							<Grid>

								<Border x:Name="border" 
										BorderBrush="{TemplateBinding BorderBrush}" 
										BorderThickness="{TemplateBinding BorderThickness}"
										Background="{TemplateBinding Background}"
										SnapsToDevicePixels="True"
										CornerRadius="10">
									<ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
								</Border>

								<TextBlock IsHitTestVisible="False"
										   Text="{TemplateBinding Tag}"
										   x:Name="placeholder"
										   Padding="{TemplateBinding Padding}"
										   VerticalAlignment="Center"
										   HorizontalAlignment="Center"
										   Foreground="#000000">

									<TextBlock.Style>
										<Style TargetType="{x:Type TextBlock}">
											<Setter Property="Visibility" Value="Collapsed" />
											<Style.Triggers>
												<DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="&#x0d;&#x0a;">
													<Setter Property="Visibility" Value="Visible" />
												</DataTrigger>
												<DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
													<Setter Property="Visibility" Value="Visible" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</TextBlock.Style>

								</TextBlock>

							</Grid>

							<ControlTemplate.Triggers>
								<Trigger Property="IsEnabled" Value="False">
									<Setter Property="Opacity" TargetName="border" Value="0.56"/>
								</Trigger>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
								</Trigger>
								<Trigger Property="IsKeyboardFocused" Value="True">
									<Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<DataTrigger Binding="{Binding (0)}" Value="false">
						<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
						<Setter Property="SelectionTextBrush" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
					</DataTrigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="IsInactiveSelectionHighlightEnabled" Value="True"/>
							<Condition Property="IsSelectionActive" Value="False"/>
						</MultiTrigger.Conditions>
						<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
						<Setter Property="SelectionTextBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
					</MultiTrigger>
				</Style.Triggers>
			</Style>
		</Style.BasedOn>
	</Style>
	
	<SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
	<SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
	<SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
	<SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
	<Style TargetType="{x:Type ListBox}">
		<Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
		<Setter Property="BorderThickness" Value="3"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<Grid>

						<Border x:Name="Bd" 
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}"
								Padding="1"
								SnapsToDevicePixels="true"
								CornerRadius="10">
							<ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
								<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</ScrollViewer>
						</Border>

						<TextBlock IsHitTestVisible="False"
								   Text="{TemplateBinding Tag}"
								   x:Name="placeholder"
								   Padding="{TemplateBinding Padding}"
								   VerticalAlignment="Center"
								   HorizontalAlignment="Center"
								   Foreground="#000000">

							<TextBlock.Style>
								<Style TargetType="{x:Type TextBlock}">
									<Setter Property="Visibility" Value="Collapsed" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource TemplatedParent}}" Value="0">
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</TextBlock.Style>

						</TextBlock>

					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
							<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsGrouping" Value="true"/>
								<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type TextBlock}" x:Key="SpinningText">

		<Setter Property="FontFamily" Value="{StaticResource FontAwesome}" />
		<Setter Property="Text" Value="&#xf110;" />
		<Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
		<Setter Property="RenderTransform">
			<Setter.Value>
				<RotateTransform></RotateTransform>
			</Setter.Value>
		</Setter>

		<Style.Resources>
			<Storyboard x:Key="Spin">
				<DoubleAnimation
					Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
					From="0"
					To="360"
					Duration="0:0:2"
					RepeatBehavior="Forever" />
			</Storyboard>
		</Style.Resources>

		<Style.Triggers>
			<DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}" Value="True">
				<DataTrigger.EnterActions>
					<BeginStoryboard Name="SpinStoryboard" Storyboard="{StaticResource Spin}" />
				</DataTrigger.EnterActions>
				<DataTrigger.ExitActions>
					<RemoveStoryboard BeginStoryboardName="SpinStoryboard" />
				</DataTrigger.ExitActions>
			</DataTrigger>
		</Style.Triggers>

	</Style>

</ResourceDictionary>